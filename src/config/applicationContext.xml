<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 第一步引入外部配置文件,设置扫描 -->	
	<context:property-placeholder location="classpath:config/dbconfig.properties"/>
	<context:component-scan base-package="com.xiaobendan"></context:component-scan>
	<!-- 第二步数据库配置datasource -->
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="driverClass" value="${driverClass}"></property>
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
	</bean>
	
	<!-- 第三步注册jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg name="dataSource" ref="pooledDataSource"></constructor-arg>
	</bean>
	
	<!-- 第四步配置对于平台的TransactionManager -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg name="dataSource" ref="pooledDataSource"></constructor-arg>
	</bean>
	
	<!-- 第五步开启基于注解的事物控制 ，依赖于tx名称空间
		声明式事物，依赖于这个。
	-->
	<tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>
</beans>
